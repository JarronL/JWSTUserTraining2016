#!/bin/csh -f
#

# get run area
if ($#argv != 1) then
   echo "usage: $0 <run-area>"
   exit 1
endif

#-------------------------------------------------------
# THIS IS MOSTLY FOR A SINGLE DEVELOPER TO RUN THE BMG.
# CHANGE THESE VARIABLES HERE AND THE REST SHOULD WORK.
#-------------------------------------------------------
setenv run_area $argv[1]
setenv MYPORTNM 5050
setenv vrs      git
setenv top      $run_area/bmg/$vrs
set    node =   "dljwetcv5.stsci.edu"
setenv BMG_DIR  $top/pandeia/backgrounds/bmg
setenv cond     $run_area/third_party/miniconda_3.7.0
setenv PATH     $cond/miniconda/bin:$PATH
set    mwlib =  "$cond/miniconda/lib/python2.7/site-packages/mod_wsgi/server/mod_wsgi-py27.so"
#-----------------------------------------------------
# shortcuts
alias echoline "python -c 'print(80*chr(45))' "
alias header 'echo "";  echo "\!*"; echoline'
#-----------------------------------------------------

#
header "Using run_area: $run_area"
if (-d $top) then
   echo "WARNING - there is data already in $top which will be overwritten (ctl-c to stop here)"
   set junk = $<
endif
mkdir -p $top
cd $top
if (`uname -n` != $node) then
   echo "WARNING: should run only on $node (ctl-c to stop here)"
   set junk = $<
endif

# Get the code - get pandeia from github - BUT git aint right on dljwetcv5 at current
cd $top
echo "SORRY - git clone isnt working on $node.  Run the following commands exactly, from another node (then hit Enter)"
echo "   cd $top"
echo "   git clone --depth 1 https://github.com/STScI-SSB/pandeia.git"
set junk = $<
ls

# Get python environment (setup miniconda)
if (-d $cond) then
   header "SKIPPING miniconda install, already at: $cond"
else
   header "Building Miniconda at $cond"
   mkdir -p $cond
   cd $cond
   wget http://repo.continuum.io/miniconda/Miniconda-3.7.0-Linux-x86_64.sh
   sh Miniconda-3.7.0-Linux-x86_64.sh -p $cond/miniconda
   header 'You MUST log out and BACK in to terminal now.  We will exit for you to do that.'
   exit 0
endif

# We have passed the stopping point above
header "Miniconda basics are done, will now install add-ons"

# Miniconda add-ons
if (-d "$cond/cfitsio") then
   header "SKIPPING already done add-ons install"
else
   conda install pip --yes
   rehash
   pip install django==1.8.14
   pip install mod_wsgi
   pip install pandokia
   pip install pyfits
   if (!(-e "$mwlib")) then
      echo "ERROR: mod_wsgi lib unfound: $mwlib"
      exit 1
   endif
   # cfitsio
   header "Building CFITSIO"
   cd $cond
   wget ftp://heasarc.gsfc.nasa.gov/software/fitsio/c/cfitsio_latest.tar.gz
   tar xf cfitsio_latest.tar.gz
   cd cfitsio
   ./configure --enable-sse2 --prefix=$run_area/third_party/miniconda_3.7.0/miniconda --enable-reentrant
   make
   make install
endif

# build our webservice
if (-e "$BMG_DIR/src/library.a") then
   header "SKIPPING already built BMG libs/binaries"
else
   header "Building BMG libraries/binaries"
   cd $BMG_DIR
   $BMG_DIR/bin/replace_pathvalues_in_kernellist.sh $BMG_DIR/inputs/kernel.list $BMG_DIR
   cd $BMG_DIR/src
   make all
   cd $BMG_DIR/src/programs
   make BackgroundModel
   make createtables

   # we apparently need this link
   cd $BMG_DIR/python
   if (!(-e bgmodel_library.a)) then
      /bin/ln -s ../src/library.a bgmodel_library.a
   endif
endif

header "Building BMG webservice python"
cd $BMG_DIR/python
python setup.py build
mkdir -p $BMG_DIR/run/lib/python
setenv PYTHONPATH $BMG_DIR/run/lib/python
python setup.py install --home $BMG_DIR/run

header "Building BMG webservice python tools"
cd $BMG_DIR/python_tools
python setup.py install --home $BMG_DIR/run

header "SKIPPING BMG unit tests"
#cd $BMG_DIR/test/unit/libBG
#make all
#make test

# set up apache config
cd $BMG_DIR/web
# hack to use MYPORTNM
cat setup.sh |sed 's/tcp_port *=.*/tcp_port='${MYPORTNM}'/' > setup.sh.tcp

# truly HORRIBLE hack to fix mod_wsgi line (change all this after Christine says ok)
cat setup.sh.tcp | sed -n '1,/esac/ p' > set1
cat setup.sh.tcp | sed    '1,/esac/ d' > set2
cat set1 >  new_setup.sh
echo "mod_wsgi=${mwlib}" >> new_setup.sh
cat set2 >> new_setup.sh
chmod +x new_setup.sh

# Now to run stuff!
header "Setting up apache stuff to run"
cd $BMG_DIR/web
./new_setup.sh
cd $BMG_DIR
mkdir -p tables/py tables/c
if (!(-e $BMG_DIR/web/apache/modules)) then
   cd $BMG_DIR/web/apache
   ln -s /etc/httpd/modules modules
endif

# You will be on your own now ...
# BUT we will make an env.csh file for you to source, for
# your server starting and stopping (so you don't need to
# run this again).
header HEED THESE INSTRUCTIONS as you are on your own now
set envdcsh = $run_area/env.csh
echo "source $envdcsh"
echo ''

echo "# THIS FILE IS AUTOMATICALLY GENERATED BY $0 SO DO NOT EDIT" > $envdcsh
echo "setenv top $top" >> $envdcsh
echo "setenv cond $cond" >> $envdcsh
echo 'setenv BMG_DIR $top/pandeia/backgrounds/bmg' >> $envdcsh
echo 'setenv PATH $cond/miniconda/bin:$PATH' >> $envdcsh
echo 'setenv PYTHONPATH $BMG_DIR/run/lib/python' >> $envdcsh
echo '' >> $envdcsh
echo 'echo "Run these commands:"' >> $envdcsh
echo "echo 'cd $BMG_DIR/tables' " >> $envdcsh
echo "echo 'python $BMG_DIR/python/jwst_bgmodel/createtables.py >& createtables_log.txt &' " >> $envdcsh
echo "echo 'cd c' " >> $envdcsh
echo "echo '$BMG_DIR/src/programs/createtables >& createtables_log.txt &' " >> $envdcsh
echo "echo 'cd $BMG_DIR/web' " >> $envdcsh
echo '# python webservice/manage.py runserver dljwetcv5.stsci.edu:5050' >> $envdcsh
echo 'echo use ./run and ./stop in \$BMG_DIR/web' >> $envdcsh
echo "echo '' " >> $envdcsh
echo '#' >> $envdcsh
echo '# stsci branch has tests that talk to the web server in these tests' >> $envdcsh
echo '# cd $BMG_DIR/test' >> $envdcsh
echo '# setenv BMGURL http://dljwetcv5.stsci.edu:5050/bmg/bmgws/' >> $envdcsh
echo '# pdkrun -r . >& logfile' >> $envdcsh
echo '# tail logfile' >> $envdcsh
echo '# cat PDK_* | ssh ssb "irafdev; pdk import - "' >> $envdcsh
echo '#' >> $envdcsh
echo 'echo examples of interrogating the web server' >> $envdcsh
echo "echo 'http://dljwetcv5.stsci.edu:5050/static.html' " >> $envdcsh
echo '# http://dljwetcv5.stsci.edu:5050/bmg/bmgws/?bmg={"query_type":"nop"}' >> $envdcsh
echo '# http://dljwetcv5.stsci.edu:5050/bmg/bmgws/?bmg={"query_type":"version"}' >> $envdcsh
echo '# http://dljwetcv5.stsci.edu:5050/bmg/bmgws/?bmg={"query_type":"in_field","ra_dec":[0,0],"date":7000,"components":15,"request_id":"1"}' >> $envdcsh
echo '# http://dljwetcv5.stsci.edu:5050/bmg/bmgws/?bmg={"query_type":"special_in_field","ra_dec":[0,0],"dates":[7000,7001,7002,7003],"components":1,"request_id":"1"}' >> $envdcsh
echo "echo '' " >> $envdcsh
echo 'grep "^#" $top/../../env.csh | grep -v AUTOMATICALLY' >> $envdcsh
echo "echo '' " >> $envdcsh
